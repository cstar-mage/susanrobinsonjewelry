<?php
/**
 * Custom
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 *
 * @category   Custom
 * @package    Message_Contactform
 * @author     Custom Development Team
 * @copyright  Copyright (c) 2013 Custom. (http://www.magerevol.com)
 * @license    http://opensource.org/licenses/osl-3.0.php
 */

require_once 'Mage/Contacts/controllers/IndexController.php';
class Message_Contactform_IndexController extends Mage_Contacts_IndexController
{
 
	const XML_PATH_EMAIL_RECIPIENT  = 'contacts/email/recipient_email';
	const XML_PATH_EMAIL_SENDER     = 'contacts/email/sender_email_identity';
	const XML_PATH_EMAIL_TEMPLATE   = 'contacts/email/email_template';
	const XML_PATH_ENABLED          = 'contacts/contacts/enabled';
	
	private function rpHash($value) {
		$hash = 5381;
		$value = strtoupper($value);
		for($i = 0; $i < strlen($value); $i++) {
			$hash = ($this->leftShift32($hash, 5) + $hash) + ord(substr($value, $i));
		}
		return $hash;
	}
	// Perform a 32bit left shift
	private function leftShift32($number, $steps) {
		// convert to binary (string)
		$binary = decbin($number);
		// left-pad with 0's if necessary
		$binary = str_pad($binary, 32, "0", STR_PAD_LEFT);
		// left shift manually
		$binary = $binary.str_repeat("0", $steps);
		// get the last 32 bits
		$binary = substr($binary, strlen($binary) - 32);
		// if it's a positive number return it
		// otherwise return the 2's complement
		return ($binary{0} == "0" ? bindec($binary) :
		-(pow(2, 31) - bindec(substr($binary, 1))));
	}
		
 public function postAction()
    {
		if(Mage::getStoreConfig('evolved/contacts_custom_captcha/enable')==1)
		{
			if($captch=$_POST['defaultReal']){
				if ($this->rpHash($_POST['defaultReal']) != $_POST['defaultRealHash']) {
					Mage::getSingleton('core/session')->addError(Mage::helper('contactform')->__('The security code entered was incorrect. Please try again!'));
					//$this->_redirect('*/');
					$this->_redirectReferer();
					return;
				}
			}	
		}
    	
        if ($data = $this->getRequest()->getPost()) {
        	 	$post = $this->getRequest()->getPost();
        		$postObject = new Varien_Object();
        		$postObject->setData($post);
        		$error = false;	
        		if ($error) { 
        			throw new Exception();
        		}
        		
               	$model = Mage::getModel('contactform/contactform');		
			    $model->setData($data)
				->setId($this->getRequest()->getParam('id'));
				//echo "<pre>"; print_r($post); exit;
            try {
                    $model->setCreatedTime(now());
					$model->setTelephone("".$post['telephone']."");
					$model->save();
					$mailTemplate = Mage::getModel('core/email_template');
					$mailTemplate->setDesignConfig(array('area' => 'frontend'))
					->setReplyTo($post['email'])
					->sendTransactionalnew(
							Mage::getStoreConfig(self::XML_PATH_EMAIL_TEMPLATE),
							Mage::getStoreConfig(self::XML_PATH_EMAIL_SENDER),
						   Mage::getStoreConfig(self::XML_PATH_EMAIL_RECIPIENT),
							$post['cname'],
							array('data' => $postObject),
							$post['email']
					);		
					
					$mailTemplate->setDesignConfig(array('area' => 'frontend'))
					->setReplyTo(Mage::getStoreConfig(self::XML_PATH_EMAIL_RECIPIENT))
					->sendTransactional(
							'contact_form_email_confirm',
							Mage::getStoreConfig(self::XML_PATH_EMAIL_SENDER),
							$_POST['email'],
							null,
							null
					);
					
					/*$mailTemplate->setDesignConfig(array('area' => 'frontend'))
					->setReplyTo(Mage::getStoreConfig(self::XML_PATH_EMAIL_RECIPIENT))
					->sendTransactional(
							Mage::getStoreConfig(self::XML_PATH_EMAIL_TEMPLATE),
							Mage::getStoreConfig(self::XML_PATH_EMAIL_SENDER),
							$_POST['email'],
							null,
							array('data' => $postObject)
					);*/
					
					if (!$mailTemplate->getSentSuccess()) {
						throw new Exception();
					}
				
			
					$success_message = Mage::getStoreConfig('contactform/general/success_message');
					Mage::getSingleton('core/session')->addSuccess(Mage::helper('contactform')->__('Message was successfully sent'));
					$this->_redirectReferer();
					return;
					
                } catch (Exception $e) {
//                   Mage::getSingleton('core/session')->addError(Mage::helper('contactform')->__('Unable to send message.'));
       				 $this->_redirectReferer();
       				 return;
                } 
           
//

           
            
        }
        	Mage::getSingleton('core/session')->addError(Mage::helper('contactform')->__('Unable to send message.'));
       		$this->_redirectReferer();
            
    }    
}
